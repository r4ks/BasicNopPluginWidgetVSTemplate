@model $Entity$SettingsModel

@{
    //page title
    ViewBag.PageTitle = T($Entity$SettingsModel.Labels.Title).Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName($Entity$SettingsModel.SYSTEM_NAME);
}

@{
    const string hideSearchBlockAttributeName = "$ucprojectname$SettingsPage.HideSearchBlock";
    var customer = await workContext.GetCurrentCustomerAsync();
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideSearchBlockAttributeName);

    const string hidePerformanceBlockAttributeName = "$ucprojectname$SettingsPage.HidePerformanceBlock";
    var hidePerformanceBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hidePerformanceBlockAttributeName);

    const string hideShareBlockAttributeName = "$ucprojectname$SettingsPage.HideShareBlock";
    var hideShareBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideShareBlockAttributeName);

    const string hideAdditionalSectionsBlockAttributeName = "$ucprojectname$SettingsPage.HideAdditionalSectionsBlock";
    var hideAdditionalSectionsBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideAdditionalSectionsBlockAttributeName);

    const string hide$ucprojectname$PagesBlockAttributeName = "$ucprojectname$SettingsPage.Hide$ucprojectname$PagesBlock";
    var hide$ucprojectname$PagesBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hide$ucprojectname$PagesBlockAttributeName);

    const string hideExportImportBlockAttributeName = "$ucprojectname$SettingsPage.HideExportImportBlock";
    var hideExportImportBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideExportImportBlockAttributeName);

}

@{
    // Helper to get string prefixed and sulfixed.
    string Gsf(string radical)
    {
        return "./" + radical + ".cshtml";
    }
}

<form asp-controller="$Entity$Setting" asp-action="Configure" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T($Entity$SettingsModel.Labels.Title)
        </h1>
        <div class="float-right">
            <button type="submit" name="save" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T(Common.Labels.Save)
            </button>
            @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = PluginWidgetZones.$ucprojectname$SettingsButtons, additionalData = Model })
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                @await Component.InvokeAsync(typeof(StoreScopeConfigurationViewComponent))
                @await Component.InvokeAsync(typeof(SettingModeViewComponent))
                <div asp-validation-summary="All"></div>

                <nop-cards id="hrsettings-cards">
                    <nop-card asp-name="hrsettings-search" asp-icon="fas fa-search" asp-title="@T($Entity$SettingsModel.Labels.Search)" asp-hide-block-attribute-name="@hideSearchBlockAttributeName" asp-hide="@hideSearchBlock" asp-advanced="false">@await Html.PartialAsync(Gsf("_$Entity$.Search"), Model)</nop-card>
                    <nop-card asp-name="hrsettings-performance" asp-icon="fas fa-chart-line" asp-title="@T($Entity$SettingsModel.Labels.Performance)" asp-hide-block-attribute-name="@hidePerformanceBlockAttributeName" asp-hide="@hidePerformanceBlock" asp-advanced="true">@await Html.PartialAsync(Gsf("_$Entity$.Performance"), Model)</nop-card>
                    <nop-card asp-name="hrsettings-share" asp-icon="fas fa-share-square" asp-title="@T($Entity$SettingsModel.Labels.Share)" asp-hide-block-attribute-name="@hideShareBlockAttributeName" asp-hide="@hideShareBlock" asp-advanced="false">@await Html.PartialAsync(Gsf("_$Entity$.Share"), Model)</nop-card>
                    <nop-card asp-name="hrsettings-additional-sections" asp-icon="fas fa-plus" asp-title="@T($Entity$SettingsModel.Labels.AdditionalSections)" asp-hide-block-attribute-name="@hideAdditionalSectionsBlockAttributeName" asp-hide="@hideAdditionalSectionsBlock" asp-advanced="false">@await Html.PartialAsync(Gsf("_$Entity$.AdditionalSections"), Model)</nop-card>
                    <nop-card asp-name="hrsettings-hr-pages" asp-icon="fas fa-th-list" asp-title="@T($Entity$SettingsModel.Labels.$ucprojectname$Pages)" asp-hide-block-attribute-name="@hide$ucprojectname$PagesBlockAttributeName" asp-hide="@hide$ucprojectname$PagesBlock" asp-advanced="true">@await Html.PartialAsync(Gsf("_$Entity$.$ucprojectname$Pages"), Model)</nop-card>
                    <nop-card asp-name="hrsettings-export-import" asp-icon="fas fa-exchange-alt" asp-title="@T($Entity$SettingsModel.Labels.ExportImport)" asp-hide-block-attribute-name="@hideExportImportBlockAttributeName" asp-hide="@hideExportImportBlock" asp-advanced="true">@await Html.PartialAsync(Gsf("_$Entity$.ExportImport"), Model)</nop-card>

                    @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = PluginWidgetZones.$ucprojectname$SettingsDetailsBlock, additionalData = Model })
                </nop-cards>
            </div>
        </div>
    </section>
</form>
